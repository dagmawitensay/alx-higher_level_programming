=========================================================
Print out two names passed as arguments to the function
=========================================================

======================================================================
Prototype: def say_my_name(first_name, last_name=""):
		Prints a formated string containing the firstname and last name
		preceeded by the text "My name is..."
		
		param: first_name(str)- a string variable to be printed
		param: last_name(str) - a second and optional string variable to concatenate with 
			first_name. if last_name is not provided print out a space.
===============================
Using 3-say_my_name.py
===============================
	>>> say_my_name = __import__('3-say_my_name').say_my_name

When called with string arguments
	>>> say_my_name("Zulu", "Pita")
	My name is Zulu Pita
	>>> say_my_name("Zyambo")
	My name is Zyambo 

================
Types of errors
================

When called with non string types
	>>> say_my_name(12, "Mwale")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

	>>> say_my_name("Zoe", 13)	
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

	>>> say_my_name()
	Traceback (most recent call last):
		...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

	>>> say_my_name(["John"], ("Mike"))
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

	>>> say_my_name("Mike", ("Joe",))
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string
